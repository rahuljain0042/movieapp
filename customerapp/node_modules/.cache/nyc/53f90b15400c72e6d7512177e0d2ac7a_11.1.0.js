var cov_mostj13jx=function(){var path='/home/traning/Desktop/customerapp/app.js',hash='9855b6c076142a4fbc467554555efb1b35d11ffd',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/traning/Desktop/customerapp/app.js',statementMap:{'0':{start:{line:1,column:16},end:{line:1,column:34}},'1':{start:{line:2,column:19},end:{line:2,column:41}},'2':{start:{line:3,column:13},end:{line:3,column:28}},'3':{start:{line:4,column:17},end:{line:4,column:36}},'4':{start:{line:6,column:17},end:{line:6,column:45}},'5':{start:{line:8,column:0},end:{line:8,column:58}},'6':{start:{line:10,column:12},end:{line:10,column:21}},'7':{start:{line:11,column:15},end:{line:11,column:41}},'8':{start:{line:12,column:16},end:{line:12,column:43}},'9':{start:{line:13,column:16},end:{line:13,column:42}},'10':{start:{line:14,column:17},end:{line:14,column:44}},'11':{start:{line:18,column:0},end:{line:18,column:27}},'12':{start:{line:19,column:1},end:{line:19,column:53}},'13':{start:{line:28,column:0},end:{line:28,column:21}},'14':{start:{line:30,column:0},end:{line:30,column:20}},'15':{start:{line:32,column:0},end:{line:32,column:20}},'16':{start:{line:34,column:0},end:{line:34,column:21}},'17':{start:{line:38,column:0},end:{line:40,column:2}},'18':{start:{line:39,column:4},end:{line:39,column:50}},'19':{start:{line:42,column:0},end:{line:42,column:19}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:38,column:17},end:{line:38,column:18}},loc:{start:{line:38,column:28},end:{line:40,column:1}},line:38}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_mostj13jx.s[0]++,require('express'));const bodyParser=(cov_mostj13jx.s[1]++,require('body-parser'));const path=(cov_mostj13jx.s[2]++,require('path'));const mongoose=(cov_mostj13jx.s[3]++,require('mongoose'));const Customer=(cov_mostj13jx.s[4]++,require('./models/customer'));// connect mongoose
cov_mostj13jx.s[5]++;mongoose.connect('mongodb://localhost:27017/customerNew');//const db = mongoose.connection;
const app=(cov_mostj13jx.s[6]++,express());const insert=(cov_mostj13jx.s[7]++,require('./routes/insert'));const display=(cov_mostj13jx.s[8]++,require('./routes/display'));const update=(cov_mostj13jx.s[9]++,require('./routes/update'));const deleted=(cov_mostj13jx.s[10]++,require('./routes/deleted'));//Body Parser Middleware
cov_mostj13jx.s[11]++;app.use(bodyParser.json());cov_mostj13jx.s[12]++;app.use(bodyParser.urlencoded({extended:false}));//Set Static Path
//app.use(express.static(path.join(__dirname, 'public')))
// app.get('/', function(req, res) {
//     res.render('index');
// });
cov_mostj13jx.s[13]++;app.use('/',display);cov_mostj13jx.s[14]++;app.use('/',insert);cov_mostj13jx.s[15]++;app.use('/',update);cov_mostj13jx.s[16]++;app.use('/',deleted);cov_mostj13jx.s[17]++;app.listen(3000,function(){cov_mostj13jx.f[0]++;cov_mostj13jx.s[18]++;console.log('Server Started on Port 3000...');});cov_mostj13jx.s[19]++;module.exports=app;